// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

generator erd {
    provider = "prisma-erd-generator"
    output   = "../docs/erd.svg"
    theme    = "dark"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    name      String
    password  String
    email     String   @unique
    userRole  UserRole @default(CONSUMER) @map("user_role")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

    Document    Document?
    Transaction Transaction[]

    @@map("users")
}

model Document {
    id     Int          @id @default(autoincrement())
    userId Int          @unique
    number BigInt       @unique
    type   DocumentType

    user        User          @relation(fields: [userId], references: [id])
    Transaction Transaction[]

    @@map("documents")
}

enum UserRole {
    CONSUMER
    MERCHANT
}

enum DocumentType {
    CPF
    CNPJ
}

model Transaction {
    id         Int               @id @default(autoincrement())
    value      Float
    documentId Int               @map("document_id")
    payerId    Int               @map("payer_id")
    payeeId    Int               @map("payee_id")
    status     TransactionStatus
    createdAt  DateTime          @default(now()) @map("created_at")
    updatedAt  DateTime          @default(now()) @updatedAt @map("updated_at")
    canceledAt DateTime?         @map("canceled_at")

    User     User?     @relation(fields: [userId], references: [id])
    userId   Int?
    Document Document? @relation(fields: [documentId], references: [id])

    @@map("transactions")
}

enum TransactionStatus {
    PENDING
    COMPLETED
    CANCELED
}
